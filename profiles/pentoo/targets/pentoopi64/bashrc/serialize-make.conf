# cite "serialize-make.conf" for package <foo> to suppress parallel make

# do this in the prepare phase, as it may be used in sed edits of makefiles
# etc.; this change will persist through to compile phase

# return given argument's value in following parameter list
__get_shortarg_value() {
	local opt
	local lookfor="${1}"
	local oldoptind="${OPTIND}"
	OPTIND=2
	while getopts ":j:l:" opt; do
		# silently ignore everything but target arg
		if [[ ${opt} == ${lookfor} ]]; then
			OPTIND="${oldoptind}"
			return ${OPTARG}
		fi
	done
	# if not specified, assume single-thread-mode intended
	OPTIND="${oldoptind}"
	return 1
}

# set MAKEOPTS to given j ceiling, unless lower already
__set_makeopts_j_ceiling_at() {
	local targetj="${1}"
	__get_shortarg_value "j" ${MAKEOPTS}
	local -i oldj=$?
	__get_shortarg_value "l" ${MAKEOPTS}
	local -i oldl=$?
	local -i newj=$((oldj<targetj?oldj:targetj))
	local -i coml=$((newj>1?(newj-1):1))
	local -i newl=$((oldl<coml?oldl:coml))
	export MAKEOPTS="-j${newj} -l${newl}"
}

# define SUPPRESS_BASHRC_MAKEOPTS=1 on the command line, or in a
# package.env file, to override this behaviour for a given package
if [[ ${EBUILD_PHASE} == "prepare" ]]; then
	if [[ ${SUPPRESS_BASHRC_MAKEOPTS:+1} ]]; then
		ewarn 'MAKEOPTS not forced'
	else
		__set_makeopts_j_ceiling_at 1
		ewarn "Forcing MAKEOPTS='${MAKEOPTS}'"
	fi
fi
